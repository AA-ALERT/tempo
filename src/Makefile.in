# Makefile.in generated automatically by automake 1.3 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DISTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
VERSION = @VERSION@

AUTOMAKE_OPTIONS = no-dependencies
#      $Id$

#  Makefile for tempo and related programs

#  To make programs:
#     make tempo
#     make matrix
#     make tdbtrans

#  To make an archive file:
#     make archive

# compilers and compiler flags

FC = f77
FFLAGS= -O3 

CC = cc
CCFLAGS = 

# source code for tempo itself.  
# (note: variables SRC3 and SRC4 are used for making archives)

bin_PROGRAMS = tempo matrix tdbtrans

tempo_SOURCES = a1ut1f.f a1utcf.f ang.f arrtim.f atimfake.f bigendian.f blkdbat.f \
        bnrybt.f bnrydd.f bnryddgr.f bnryddt.f bnryeh.f bnryell1.f bnrymss.f \
        bootmc.f bt2ell1.f chebpc.f citem.f clockcor.f covar.f damoyr.f dot.f \
        dskrd.f earth.f  ephinit.f ephread.f equ2ecl.f fit.f fk4tofk5.f \
        galco.f gasdev.f inpar.f interp.f lmst.f matinv.f mxprt.f newbin.f \
        newsrc.f newval.f nutation.f obsite.f outpar.f pcard.f pcshft.f \
        pospm_conv.f prcnut.f precession.f propmo.f radian.f ran1.f resid.f \
        setup.f sort.f space_motion.f tasc2t0.f tdbinit.f tdbread.f tempo.f \
        timcalc.f tpohdr.f tzfit.f tzinit.f ut1red.f vmemw.f  ztim.f cutil.c

tempo_LINK = $(FC) $(FFLAGS) -o $@

SRC3 = acom.h dim.h bcom.h clocks.h dp.h eph.h ephcom.h glitch.h \
	orbit.h tdbcom.h trnsfr.h tz.h vcom.h 
SRC4 = Makefile

matrix_SOURCES = matrix.f
matrix_LINK = $(FC) $(FFLAGS) -o $@

tdbtrans_SOURCES = tdbgen.f tdb1ns.f bigendian.f cutil.c
tdbtrans_LINK = $(FC) -o $@

SUFFIXES=.f
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
tempo_OBJECTS =  a1ut1f.o a1utcf.o ang.o arrtim.o atimfake.o bigendian.o \
blkdbat.o bnrybt.o bnrydd.o bnryddgr.o bnryddt.o bnryeh.o bnryell1.o \
bnrymss.o bootmc.o bt2ell1.o chebpc.o citem.o clockcor.o covar.o \
damoyr.o dot.o dskrd.o earth.o ephinit.o ephread.o equ2ecl.o fit.o \
fk4tofk5.o galco.o gasdev.o inpar.o interp.o lmst.o matinv.o mxprt.o \
newbin.o newsrc.o newval.o nutation.o obsite.o outpar.o pcard.o \
pcshft.o pospm_conv.o prcnut.o precession.o propmo.o radian.o ran1.o \
resid.o setup.o sort.o space_motion.o tasc2t0.o tdbinit.o tdbread.o \
tempo.o timcalc.o tpohdr.o tzfit.o tzinit.o ut1red.o vmemw.o ztim.o \
cutil.o
tempo_LDADD = $(LDADD)
tempo_DEPENDENCIES = 
tempo_LDFLAGS = 
matrix_OBJECTS =  matrix.o
matrix_LDADD = $(LDADD)
matrix_DEPENDENCIES = 
matrix_LDFLAGS = 
tdbtrans_OBJECTS =  tdbgen.o tdb1ns.o bigendian.o cutil.o
tdbtrans_LDADD = $(LDADD)
tdbtrans_DEPENDENCIES = 
tdbtrans_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
SOURCES = $(tempo_SOURCES) $(matrix_SOURCES) $(tdbtrans_SOURCES)
OBJECTS = $(tempo_OBJECTS) $(matrix_OBJECTS) $(tdbtrans_OBJECTS)

all: Makefile $(PROGRAMS)

.SUFFIXES:
.SUFFIXES: .S .c .f .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
	     $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

tempo: $(tempo_OBJECTS) $(tempo_DEPENDENCIES)
	@rm -f tempo
	$(tempo_LINK) $(tempo_LDFLAGS) $(tempo_OBJECTS) $(tempo_LDADD) $(LIBS)

matrix: $(matrix_OBJECTS) $(matrix_DEPENDENCIES)
	@rm -f matrix
	$(matrix_LINK) $(matrix_LDFLAGS) $(matrix_OBJECTS) $(matrix_LDADD) $(LIBS)

tdbtrans: $(tdbtrans_OBJECTS) $(tdbtrans_DEPENDENCIES)
	@rm -f tdbtrans
	$(tdbtrans_LINK) $(tdbtrans_LDFLAGS) $(tdbtrans_OBJECTS) $(tdbtrans_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $(SOURCES) $(HEADERS) $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: install-binPROGRAMS
	@$(NORMAL_INSTALL)

install-data: 
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-binPROGRAMS

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:
	$(mkinstalldirs)  $(DATADIR)$(bindir)


mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(DISTCLEANFILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-generic

clean:  clean-binPROGRAMS clean-compile clean-tags clean-generic \
		mostlyclean

distclean:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-generic clean
	-rm -f config.status

maintainer-clean:  maintainer-clean-binPROGRAMS maintainer-clean-compile \
		maintainer-clean-tags maintainer-clean-generic \
		distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info dvi installcheck \
install-exec install-data install uninstall all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


.f.o:
	$(FC) -c $(FFLAGS) -o $@ $<

arrtim.o: arrtim.f acom.h orbit.h dp.h bcom.h trnsfr.h clocks.h dim.h glitch.h tz.h
	$(FC) -c $(FFLAGS) arrtim.f
atimfake.o: atimfake.f dim.h tz.h
	$(FC) -c $(FFLAGS) atimfake.f
bnrybt.o: bnrybt.f dp.h orbit.h dim.h
	$(FC) -c $(FFLAGS) bnrybt.f
bnrydd.o: bnrydd.f dp.h orbit.h dim.h
	$(FC) -c $(FFLAGS) bnrydd.f
bnryddgr.o: bnryddgr.f orbit.h dim.h
	$(FC) -c $(FFLAGS) bnryddgr.f
bnryddt.o: bnryddt.f orbit.h dim.h
	$(FC) -c $(FFLAGS) bnryddt.f
bnryeh.o: bnryeh.f dp.h orbit.h dim.h
	$(FC) -c $(FFLAGS) bnryeh.f
bnryell1.o: bnryell1.f dp.h orbit.h dim.h
	$(FC) -c $(FFLAGS) bnryell1.f
bnrymss.o: bnrymss.f dp.h orbit.h dim.h
	$(FC) -c $(FFLAGS) bnrymss.f
bootmc.o: bootmc.f dim.h
	$(FC) -c $(FFLAGS) bootmc.f
bt2ell1.o: bt2ell1.f orbit.h
	$(FC) -c $(FFLAGS) bt2ell1.f
clockcor.o: clockcor.f dim.h clocks.h
	$(FC) -c $(FFLAGS) clockcor.f
cutil.o: cutil.c
	$(CC) -c $(CCFLAGS) cutil.c
fit.o: fit.f acom.h bcom.h orbit.h dim.h tz.h
	$(FC) -c $(FFLAGS) fit.f
ephinit.o: ephinit.f ephcom.h
	$(FC) -c $(FFLAGS) ephinit.f
ephread.o: ephread.f ephcom.h
	$(FC) -c $(FFLAGS) ephread.f
mxprt.o: mxprt.f dim.h
	$(FC) -c $(FFLAGS) mxprt.f
inpar.o: inpar.f acom.h bcom.h dp.h trnsfr.h orbit.h clocks.h dim.h glitch.h tz.h
	$(FC) -c $(FFLAGS) inpar.f
newbin.o: newbin.f acom.h orbit.h dim.h
	$(FC) -c $(FFLAGS) newbin.f
newsrc.o: newsrc.f acom.h bcom.h dp.h trnsfr.h orbit.h clocks.h dim.h glitch.h
	$(FC) -c $(FFLAGS) newsrc.f
newval.o: newval.f acom.h bcom.h dp.h trnsfr.h orbit.h dim.h glitch.h
	$(FC) -c $(FFLAGS) newval.f
outpar.o: outpar.f acom.h bcom.h dp.h trnsfr.h orbit.h clocks.h dim.h glitch.h tz.h eph.h
	$(FC) -c $(FFLAGS) outpar.f
pcard.o: pcard.f acom.h dim.h
	$(FC) -c $(FFLAGS) pcard.f
resid.o: resid.f acom.h bcom.h orbit.h dp.h dim.h glitch.h
	$(FC) -c $(FFLAGS) resid.f
setup.o: setup.f acom.h dim.h
	$(FC) -c $(FFLAGS) setup.f
tasc2t0.o: tasc2t0.f orbit.h
	$(FC) -c $(FFLAGS) tasc2t0.f
tdbinit.o: tdbinit.f tdbcom.h
	$(FC) -c $(FFLAGS) tdbinit.f	
tdbread.o: tdbread.f tdbcom.h
	$(FC) -c $(FFLAGS) tdbread.f	
tempo.o: tempo.f acom.h bcom.h dp.h orbit.h dim.h tz.h
	$(FC) -c $(FFLAGS) tempo.f
timcalc.o: timcalc.f acom.h dim.h trnsfr.h
	$(FC) -c $(FFLAGS) timcalc.f
tzinit.o: tzinit.f dim.h tz.h
	$(FC) -c $(FFLAGS) tzinit.f
tpohdr.o: tpohdr.f dim.h tz.h
	$(FC) -c $(FFLAGS) tpohdr.f
tzfit.o: tzfit.f dim.h acom.h tz.h
	$(FC) -c $(FFLAGS) tzfit.f
ut1red.o: ut1red.f dim.h 
	$(FC) -c $(FFLAGS) ut1red.f
vmemw.o: vmemw.f dim.h vcom.h
	$(FC) -c $(FFLAGS) vmemw.f
ztim.o: ztim.f trnsfr.h
	$(FC) -c $(FFLAGS) ztim.f
tdb1ns.o: tdb1ns.f
	$(FC) -c tdb1ns.f

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
