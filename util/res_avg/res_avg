#! /usr/bin/perl

# Average a date-sorted residual file to 1 point per day
# Expects input in the form produced by print_resid.
# Sample usage:
#   print_resid | sort -n -k1 | res_avg

$lastmjd = 0;
$r2_tot = 0.0;
$wr2_tot = 0.0;
$wt_tot = 0.0;
$ct_tot = 0.0;
while (<>) {
    chomp;
    ($mjd0, $freq0, $res0, $err0, $ophase0) = split;
    $imjd0 = int($mjd0);
    $wt0 = 1.0/($err0*$err0);

    if ($imjd0 != $lastmjd) {

        if ($lastmjd>0) {
            # Normalize avgs
            $mjd  /= $wtsum;
            $freq /= $wtsum;
            $res  /= $wtsum;
            $ophase /= $wtsum;

            # How to compute error....
            if ($count>1) {
                $rchi2 = ($r2sum - $wtsum*$res*$res)/($count-1);
            } else {
                $rchi2 = 1.0;
            }
            $err = sqrt($err)/$wtsum;
            $err *= sqrt($rchi2);

            $wr2_tot += $res*$res*(1.0/($err*$err));
            $r2_tot += $res*$res;
            $wt_tot += (1.0/($err*$err));
            $ct_tot++;

            # Output line
            print sprintf("%15.9f %9.4f %+.8e %.4e %.8f %f\n",
                $mjd, $freq, $res, $err, $ophase, $rchi2);
        }

        # Reset stats
        $mjd = $freq = $res = $err = $ophase = 0.0;
        $count = 0;
        $wtsum = 0;
        $r2sum = 0;
        $lastmjd = $imjd0;
    }

    # Add into avgs
    $mjd += $mjd0*$wt0;
    $freq += $freq0*$wt0;
    $res += $res0*$wt0;
    $ophase += $ophase0*$wt0;
    $err += $err0*$err0*$wt0*$wt0;
    $r2sum += $res0*$res0*$wt0;
    $wtsum += $wt0;
    $count++;
}

# Print the final line
if ($count>0) {
    $mjd  /= $wtsum;
    $freq /= $wtsum;
    $res  /= $wtsum;
    $ophase /= $wtsum;
    if ($count>1) { 
        $rchi2 = ($r2sum - $wtsum*$res*$res)/($count-1);
    } else {
        $rchi2 = 1.0;
    }
    $err = sqrt($err)/$wtsum;
    $err *= sqrt($rchi2);
    $wr2_tot += $res*$res*(1.0/($err*$err));
    $r2_tot += $res*$res;
    $wt_tot += (1.0/($err*$err));
    $ct_tot++;
    print sprintf("%15.9f %9.4f %+.8e %.4e %.8f %f\n",
        $mjd, $freq, $res, $err, $ophase, $rchi2);
}


print sprintf("# WRMS = %.3f ns\n", sqrt($wr2_tot/$wt_tot));
print sprintf("#  RMS = %.3f ns\n", sqrt($r2_tot/$ct_tot));
